version: '3.8'

services:
  db:
    image: alpine:latest
    command: /bin/sh -c "apk add --no-cache sqlite && echo 'Executing schema.sql' && sqlite3 /db/data.db '.read /db/schema.sql' && echo 'Schema executed' && tail -f /dev/null"
    volumes:
      - db_data:/db
      - ./db/schema.sql:/db/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "sqlite3 /db/data.db 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    image: python:3.8-slim
    working_dir: /app
    command: sh -c "pip install -r requirements.txt && uvicorn main:app --host 0.0.0.0 --port 80"
    volumes:
      - ./app:/app
      - db_data:/app/db
    ports:
      - "80:80"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=sqlite:////app/db/data.db

  ml_model:
    build: ./ml_model
    ports:
      - "5000:5000"
    volumes:
      - ./ml_model:/ml_model
    depends_on:
      - db

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-init:
    image: apache/airflow:2.6.3
    command: db init
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${WEBSERVER_SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./ml_model:/opt/airflow/ml_model
      - ./features:/opt/airflow/features
    depends_on:
      - postgres

  airflow-webserver:
    image: apache/airflow:2.6.3
    command: webserver
    env_file: .env
    ports:
      - "8081:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${WEBSERVER_SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./ml_model:/opt/airflow/ml_model
      - ./features:/opt/airflow/features
    depends_on:
      - postgres
      - airflow-init

  airflow-scheduler:
    image: apache/airflow:2.6.3
    command: scheduler
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__WEBSERVER__SECRET_KEY: ${WEBSERVER_SECRET_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./ml_model:/opt/airflow/ml_model
      - ./features:/opt/airflow/features
    depends_on:
      - postgres
      - airflow-init

volumes:
  db_data:
  postgres-db-volume:
